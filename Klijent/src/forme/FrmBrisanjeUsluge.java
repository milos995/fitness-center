/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Usluga;
import domen.Zaposleni;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import konstante.Operacije;
import konstante.Status;
import modeli.TableModelUsluge;
import transfer.ObjekatOdgovor;
import transfer.ObjekatZahtev;

/**
 *
 * @author Milos
 */
public class FrmBrisanjeUsluge extends javax.swing.JPanel {
    private Zaposleni ulogovaniZaposleni;
    /**
     * Creates new form FrmBrisanjeUsluge
     */
    public FrmBrisanjeUsluge(boolean izmena) {
        initComponents();
        srediTabelu("");
        try {
            jButtonIzmeni.setVisible(false);
            if(izmena==true){
                jButtonIzmeni.setVisible(true);
                jButtonIzbrisi.setVisible(false);            
            }
        } catch (Exception e) {
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelFilter = new javax.swing.JLabel();
        jTextFieldFilter = new javax.swing.JTextField();
        jButtonPronadji = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsluge = new javax.swing.JTable();
        jButtonIzbrisi = new javax.swing.JButton();
        jButtonOdustani = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();

        jLabelFilter.setText("Filter: ");

        jButtonPronadji.setText("Pronadji");
        jButtonPronadji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPronadjiActionPerformed(evt);
            }
        });

        jTableUsluge.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableUsluge);

        jButtonIzbrisi.setText("Izbriši");
        jButtonIzbrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzbrisiActionPerformed(evt);
            }
        });

        jButtonOdustani.setText("Odustani");
        jButtonOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdustaniActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPronadji, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonIzbrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jButtonOdustani)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFilter)
                    .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPronadji))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIzmeni)
                    .addComponent(jButtonIzbrisi)
                    .addComponent(jButtonOdustani))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPronadjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPronadjiActionPerformed
        String filter = jTextFieldFilter.getText();
        String nalepi = " WHERE NazivUsluge LIKE '"+filter+"%' ORDER BY NazivUsluge ASC";
        srediTabelu(nalepi);
        JOptionPane.showMessageDialog(this, "Sistem je našao usluge po zadatoj vrednosti");
    }//GEN-LAST:event_jButtonPronadjiActionPerformed

    private void jButtonOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdustaniActionPerformed
        this.getTopLevelAncestor().setVisible(false);
    }//GEN-LAST:event_jButtonOdustaniActionPerformed

    private void jButtonIzbrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzbrisiActionPerformed
        int red = jTableUsluge.getSelectedRow();
        if(red==-1){
            JOptionPane.showMessageDialog(this, "Morate prvo selektovati uslugu za brisanje");
            return;
        }
        
        TableModelUsluge tmu = (TableModelUsluge) jTableUsluge.getModel();
        Usluga u = tmu.vratiSelektovanuUslugu(red);
        
        ObjekatZahtev zahtev = new ObjekatZahtev(Operacije.IZBRISI_USLUGU, u);
        Komunikacija.getInstance().posaljiZahtev(zahtev);
        ObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();

        if(odgovor.getStatus() == Status.ERROR){
            JOptionPane.showMessageDialog(this, "Sistem ne može da izbriše uslugu");
            System.out.println(odgovor.getPoruka());
            return;
        }
            
        JOptionPane.showMessageDialog(this, "Sistem je uspešno izbrisao uslugu");
        String filter = jTextFieldFilter.getText();
        srediTabelu(filter);
    }//GEN-LAST:event_jButtonIzbrisiActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        int red = jTableUsluge.getSelectedRow();
        if(red==-1){
            JOptionPane.showMessageDialog(this, "Morate prvo selektovati uslugu za izmenu");
            return;
        }
        
        TableModelUsluge tmu = (TableModelUsluge) jTableUsluge.getModel();
        Usluga u = tmu.vratiSelektovanuUslugu(red);
        
        ObjekatZahtev zahtev = new ObjekatZahtev(Operacije.PRIKAZI_USLUGU, u.getUslugaID());
        Komunikacija.getInstance().posaljiZahtev(zahtev);
        ObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();

        if(odgovor.getStatus() == Status.ERROR){
            JOptionPane.showMessageDialog(this, "Sistem ne može da nađe podatke o usluzi");
            System.out.println(odgovor.getPoruka());
            return;
        }
        
        Usluga uPrikaz = (Usluga) odgovor.getOdgovor();
        
        this.getTopLevelAncestor().setVisible(false);
        FrmUnosUsluge fuu = new FrmUnosUsluge(uPrikaz);
        fuu.setUlogovaniZaposleni(ulogovaniZaposleni);
        JDialog d = new JDialog((JDialog)this.getTopLevelAncestor(), "Izmena usluge");        
        d.setLayout(new BorderLayout());
        d.add(fuu, BorderLayout.CENTER);
        d.pack();
        d.setVisible(true);
        JOptionPane.showMessageDialog(this, "Sistem je pronašo podatke o usluzi");
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    public Zaposleni getUlogovaniZaposleni() {
        return ulogovaniZaposleni;
    }

    public void setUlogovaniZaposleni(Zaposleni ulogovaniZaposleni) {
        this.ulogovaniZaposleni = ulogovaniZaposleni;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzbrisi;
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonOdustani;
    private javax.swing.JButton jButtonPronadji;
    private javax.swing.JLabel jLabelFilter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsluge;
    private javax.swing.JTextField jTextFieldFilter;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu(String filter) {
        ObjekatZahtev zahtev = new ObjekatZahtev(Operacije.PRETRAZI_USLUGE, filter);
        Komunikacija.getInstance().posaljiZahtev(zahtev);
        ObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
        if(odgovor.getStatus() == Status.ERROR){
            JOptionPane.showMessageDialog(this, "Sistem ne može da nađe usluge po zadatoj vrednosti");
            System.out.println(odgovor.getPoruka());
            return;
        }        
        List<Usluga> lu = (List<Usluga>) odgovor.getOdgovor();
               
        TableModelUsluge tmu = new TableModelUsluge(lu);
        jTableUsluge.setModel(tmu);
    }
}
