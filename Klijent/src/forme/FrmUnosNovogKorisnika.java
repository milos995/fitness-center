/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.KoriscenjeUsluge;
import domen.Korisnik;
import domen.Mesto;
import domen.Usluga;
import domen.Zaposleni;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import komunikacija.Komunikacija;
import konstante.Operacije;
import konstante.Status;
import modeli.TableModelKorisnik;
import transfer.ObjekatOdgovor;
import transfer.ObjekatZahtev;

/**
 *
 * @author Milos
 */
public class FrmUnosNovogKorisnika extends javax.swing.JPanel {
    private Zaposleni ulogovaniZaposleni;
    private Korisnik k;
    /**
     * Creates new form FrmUnosNovogKorisnika
     */
    public FrmUnosNovogKorisnika() {
        initComponents();
        kreirajKorisnika(); 
        try {
            jButtonIzmeni.setVisible(false);
        } catch (Exception e) {
        }        
        ucitajKomboMesta();
        srediTabelu();        
    }

    public FrmUnosNovogKorisnika(Korisnik k, boolean detalji){
        initComponents();
        this.k = k;  
        try {
            jButtonSacuvaj.setVisible(false);
            ucitajKomboMesta();
            srediTabelu();        
            ubaciPodatke();        
            if(detalji==true){
                srediTabeluDetalji();
                jButtonIzmeni.setVisible(false);
                jButtonDodajKoriscenjeUsluge.setVisible(false);
                jButtonIzbrisiKoriscenjeUsluge.setVisible(false);
                jTextFieldIme.setEditable(false);
                jTextFieldPrezime.setEditable(false);
                jTextFieldTelefon.setEditable(false);
                jTextFieldAdresa.setEditable(false);
                jComboBoxMesto.removeAllItems();
                jComboBoxMesto.addItem(k.getMesto());
            }
        } catch (Exception e) {
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelUlogovaniZaposleni = new javax.swing.JLabel();
        jLabelIme = new javax.swing.JLabel();
        jTextFieldIme = new javax.swing.JTextField();
        jLabelPrezime = new javax.swing.JLabel();
        jTextFieldPrezime = new javax.swing.JTextField();
        jLabelTelefon = new javax.swing.JLabel();
        jTextFieldTelefon = new javax.swing.JTextField();
        jLabelAdresa = new javax.swing.JLabel();
        jTextFieldAdresa = new javax.swing.JTextField();
        jLabelMesto = new javax.swing.JLabel();
        jComboBoxMesto = new javax.swing.JComboBox();
        jButtonIzbrisiKoriscenjeUsluge = new javax.swing.JButton();
        jButtonDodajKoriscenjeUsluge = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableKoriscenjeUsluge = new javax.swing.JTable();
        jButtonOdustani = new javax.swing.JButton();
        jButtonSacuvaj = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();

        jLabelUlogovaniZaposleni.setText("Ulogovani zaposleni:");

        jLabelIme.setText("Ime:");

        jLabelPrezime.setText("Prezime:");

        jLabelTelefon.setText("Telefon: ");

        jLabelAdresa.setText("Adresa:");

        jLabelMesto.setText("Mesto:");

        jComboBoxMesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonIzbrisiKoriscenjeUsluge.setText("-");
        jButtonIzbrisiKoriscenjeUsluge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzbrisiKoriscenjeUslugeActionPerformed(evt);
            }
        });

        jButtonDodajKoriscenjeUsluge.setText("+");
        jButtonDodajKoriscenjeUsluge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajKoriscenjeUslugeActionPerformed(evt);
            }
        });

        jTableKoriscenjeUsluge.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableKoriscenjeUsluge);

        jButtonOdustani.setText("Odustani");
        jButtonOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdustaniActionPerformed(evt);
            }
        });

        jButtonSacuvaj.setText("Saƒçuvaj");
        jButtonSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                    .addComponent(jLabelUlogovaniZaposleni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelMesto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelAdresa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelTelefon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(jLabelPrezime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelIme, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldIme)
                            .addComponent(jTextFieldPrezime)
                            .addComponent(jTextFieldTelefon)
                            .addComponent(jTextFieldAdresa)
                            .addComponent(jComboBoxMesto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonDodajKoriscenjeUsluge, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIzbrisiKoriscenjeUsluge, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSacuvaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOdustani)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUlogovaniZaposleni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIme)
                    .addComponent(jTextFieldIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrezime)
                    .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTelefon)
                    .addComponent(jTextFieldTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAdresa)
                    .addComponent(jTextFieldAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMesto)
                    .addComponent(jComboBoxMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIzbrisiKoriscenjeUsluge)
                    .addComponent(jButtonDodajKoriscenjeUsluge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIzmeni)
                    .addComponent(jButtonSacuvaj)
                    .addComponent(jButtonOdustani))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdustaniActionPerformed
        this.getTopLevelAncestor().setVisible(false);
    }//GEN-LAST:event_jButtonOdustaniActionPerformed

    private void jButtonSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajActionPerformed
        String ime = jTextFieldIme.getText();
        String prezime = jTextFieldPrezime.getText();
        String telefon = jTextFieldTelefon.getText();
        String adresa = jTextFieldAdresa.getText();
        Mesto m = (Mesto) jComboBoxMesto.getSelectedItem();
        
        if(ime.isEmpty() || prezime.isEmpty() || telefon.isEmpty() || adresa.isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja su obavezna!");
            return;
        }
        
        k.setIme(ime);
        k.setPrezime(prezime);
        k.setTelefon(telefon);
        k.setAdresa(adresa);
        k.setMesto(m);
        k.setZaposleni(ulogovaniZaposleni);
        
        ObjekatZahtev zahtev = new ObjekatZahtev(Operacije.ZAPAMTI_KORISNIKA, k);
        Komunikacija.getInstance().posaljiZahtev(zahtev);
        ObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
        
        if (odgovor.getStatus() == Status.ERROR) {
            JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da zamapti korisnika");
            System.out.println(odgovor.getPoruka());
            return;
        }
        JOptionPane.showMessageDialog(this, "Sistem je zapamtio korisnika");
    }//GEN-LAST:event_jButtonSacuvajActionPerformed

    private void jButtonDodajKoriscenjeUslugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajKoriscenjeUslugeActionPerformed
        TableModelKorisnik tmk = (TableModelKorisnik) jTableKoriscenjeUsluge.getModel();
        tmk.dodajKoriscenjeUsluge();
    }//GEN-LAST:event_jButtonDodajKoriscenjeUslugeActionPerformed

    private void jButtonIzbrisiKoriscenjeUslugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzbrisiKoriscenjeUslugeActionPerformed
        TableModelKorisnik tmk = (TableModelKorisnik) jTableKoriscenjeUsluge.getModel();
        int red = jTableKoriscenjeUsluge.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this, "Morate selektovati red iz tabele za brisanje!");
            return;
        }
        tmk.ukloniKoriscenjeUsluge(red);
    }//GEN-LAST:event_jButtonIzbrisiKoriscenjeUslugeActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        String ime = jTextFieldIme.getText();
        String prezime = jTextFieldPrezime.getText();
        String telefon = jTextFieldTelefon.getText();
        String adresa = jTextFieldAdresa.getText();
        Mesto m = (Mesto) jComboBoxMesto.getSelectedItem();
        
        if(ime.isEmpty() || prezime.isEmpty() || telefon.isEmpty() || adresa.isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja su obavezna!");
            return;
        }
        
        k.setIme(ime);
        k.setPrezime(prezime);
        k.setTelefon(telefon);
        k.setAdresa(adresa);
        k.setMesto(m);
        k.setZaposleni(ulogovaniZaposleni);
        
        TableModelKorisnik tmk = (TableModelKorisnik) jTableKoriscenjeUsluge.getModel();
        List<KoriscenjeUsluge> lku = tmk.vratiSvaKoriscenja();
        
        Korisnik kBrisanje = new Korisnik(k.getKorisnikID(), ime, prezime, telefon, adresa, ulogovaniZaposleni, m, lku);
        
        ObjekatZahtev zahtev = new ObjekatZahtev(Operacije.IZMENI_KORISNIKA, kBrisanje);
        Komunikacija.getInstance().posaljiZahtev(zahtev);
        ObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
        
        if (odgovor.getStatus() == Status.ERROR) {
            JOptionPane.showMessageDialog(this, "Sistem ne mo≈æe da izmeni korisnika");
            System.out.println(odgovor.getPoruka());
            return;
        }
        JOptionPane.showMessageDialog(this, "Sistem je izmenio korisnika");
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    public Zaposleni getUlogovaniZaposleni() {
        return ulogovaniZaposleni;
    }

    public void setUlogovaniZaposleni(Zaposleni ulogovaniZaposleni) {
        this.ulogovaniZaposleni = ulogovaniZaposleni;
        jLabelUlogovaniZaposleni.setText("Ulogovani zaposleni: "+ulogovaniZaposleni);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajKoriscenjeUsluge;
    private javax.swing.JButton jButtonIzbrisiKoriscenjeUsluge;
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonOdustani;
    private javax.swing.JButton jButtonSacuvaj;
    private javax.swing.JComboBox jComboBoxMesto;
    private javax.swing.JLabel jLabelAdresa;
    private javax.swing.JLabel jLabelIme;
    private javax.swing.JLabel jLabelMesto;
    private javax.swing.JLabel jLabelPrezime;
    private javax.swing.JLabel jLabelTelefon;
    private javax.swing.JLabel jLabelUlogovaniZaposleni;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableKoriscenjeUsluge;
    private javax.swing.JTextField jTextFieldAdresa;
    private javax.swing.JTextField jTextFieldIme;
    private javax.swing.JTextField jTextFieldPrezime;
    private javax.swing.JTextField jTextFieldTelefon;
    // End of variables declaration//GEN-END:variables

    private void ucitajKomboMesta() {
        ObjekatZahtev zahtev = new ObjekatZahtev(Operacije.VRATI_LISTU_MESTA, null);
        Komunikacija.getInstance().posaljiZahtev(zahtev);
        ObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
        if (odgovor.getStatus() == Status.ERROR) {
            JOptionPane.showMessageDialog(this, "Greska prilikom ucitavanja liste mesta");
            System.out.println(odgovor.getPoruka());
            return;
        }
        List<Mesto> lm = (List<Mesto>) odgovor.getOdgovor();
        
        jComboBoxMesto.removeAllItems();
        for (Mesto mesto : lm) {
            jComboBoxMesto.addItem(mesto);
        }
        
    }

    private void srediTabelu() {
        ObjekatZahtev zahtev = new ObjekatZahtev(Operacije.VRATI_LISTU_USLUGA, "");
        Komunikacija.getInstance().posaljiZahtev(zahtev);
        ObjekatOdgovor odgovor = Komunikacija.getInstance().primiOdgovor();
        List<Usluga> lu = (List<Usluga>) odgovor.getOdgovor();
        
        jTableKoriscenjeUsluge.setModel(new TableModelKorisnik(k, false));
        JComboBox jComboBoxUsluga = new JComboBox();
        for (Usluga usluga : lu) {
            jComboBoxUsluga.addItem(usluga);
        }
        TableColumn tcUsluga = jTableKoriscenjeUsluge.getColumnModel().getColumn(0);
        tcUsluga.setCellEditor(new DefaultCellEditor(jComboBoxUsluga));
    }

    private void ubaciPodatke() {
        jTextFieldIme.setText(k.getIme());
        jTextFieldPrezime.setText(k.getPrezime());
        jTextFieldTelefon.setText(k.getTelefon());
        jTextFieldAdresa.setText(k.getAdresa());
        jComboBoxMesto.setSelectedItem(k.getMesto());
    }

    private void srediTabeluDetalji() {
        jTableKoriscenjeUsluge.setModel(new TableModelKorisnik(k, true));
    }

    private void kreirajKorisnika() {
        k = new Korisnik();
    }
}
